import*as t from"three";class s{constructor(t,s){return this.sketch=t,this.THREE=this.sketch.THREE,this.scene=new this.THREE.Scene,this.scene.background=new this.THREE.Color(16777215),this.scene}}class e{constructor(t){return this.sketch=t,this.THREE=this.sketch.THREE,this.renderer=new this.THREE.WebGLRenderer({antialias:!0}),this.renderer.setSize(this.sketch.sizes.width,this.sketch.sizes.height),this.renderer.setPixelRatio(Math.min(2,window.devicePixelRatio)),this.renderer.shadowMap.enabled=!0,this.renderer.shadowMap.type=this.THREE.PCFSoftShadowMap,this.renderer.physicallyCorrectLights=!0,this.renderer.outputEncoding=this.THREE.sRGBEncoding,this.renderer.toneMapping=this.THREE.ACESFilmicToneMapping,this.renderer.update=this.update.bind(this.sketch),this.renderer}update(){this.renderer.render(this.scene,this.camera)}}class i{constructor(t){return this.sketch=t,this.THREE=this.sketch.THREE,this.camera=new this.THREE.PerspectiveCamera(75,this.sketch.sizes.width/this.sketch.sizes.height,1,200),this.camera.position.x=0,this.camera.position.y=0,this.camera.position.z=2,this.sketch.scene.add(this.camera),this.camera}}class h{constructor(t,s){this.sketch=t,this.THREE=this.sketch.THREE,this.ambient()}ambient(){let t=new this.THREE.AmbientLight(16777215,.7,100);this.sketch.scene.add(t)}directional(){let t=new this.THREE.DirectionalLight(16777215,1,100);t.position.set(-3,5,-3),this.sketch.scene.add(t)}}class n{constructor(t,s){this.sketch=t,this.THREE=this.sketch.THREE,this.settings={...s},this.addEvents()}addEvents(){window.addEventListener("resize",this.onWindowResize.bind(this),!1)}onWindowResize(){this.sketch.sizes={width:window.innerWidth,height:window.innerHeight},this.sketch.camera.aspect=this.sketch.sizes.width/this.sketch.sizes.height,this.sketch.camera.updateProjectionMatrix(),this.sketch.renderer.setSize(this.sketch.sizes.width,this.sketch.sizes.height),this.sketch.renderer.setPixelRatio(Math.min(2,window.devicePixelRatio))}}class r{constructor(t,s){this.sketch=t,this.THREE=this.sketch.THREE,this.settings={...s},this.tasks=[]}add(t){this.tasks.push(t)}animate(){requestAnimationFrame(this.animate.bind(this)),this.tasks.forEach((t=>t())),this.sketch.renderer.update()}}class a{constructor(t,s){this.settings={load:()=>{console.log("loaded")},progress:(t,s,e)=>{console.log("%loaded:",s/e)},...s},this.THREE=t.THREE,this.manager=new this.THREE.LoadingManager((()=>this.settings.load()),((t,s,e)=>this.settings.progress(t,s,e)))}}class c{constructor(){console.log(t),this.THREE=t,this.animator=new r(this),this.sizes={width:window.innerWidth,height:window.innerHeight},this.scene=new s(this),this.renderer=new e(this),this.camera=new i(this),this.lights=new h(this),this.events=new n(this),this.loader=new a(this,{load:()=>{this.addObjects()}}),this.clock=new t.Clock,this.clock.start(),this.init()}init(){document.body.appendChild(this.renderer.domElement),this.animator.animate()}}export{c as default};
