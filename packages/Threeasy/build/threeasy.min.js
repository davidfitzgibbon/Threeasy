import*as t from"three";class e{constructor(t){this.app=t,this.tasks=[]}add(t){this.tasks.push(t)}animate(){requestAnimationFrame(this.animate.bind(this)),this.tasks.forEach((t=>t())),this.app.render()}}class s{constructor(t,e){this.app=t,this.THREE=t.THREE,this.settings={load:()=>{this.app.init()},progress:(t,e,s)=>{},gltfExtensions:[".gltf",".glb"],objExtensions:[".obj"],textureExtensions:[".jpg",".jpeg",".png",".gif",".bmp",".tga"],...e},this.manager=new this.THREE.LoadingManager((()=>this.settings.load()),((t,e,s)=>this.settings.progress(t,e,s))),this.setUpLoaders()}setUpLoaders(){this.TextureLoader=!1,this.GLTFLoader=!1,this.OBJLoader=!1,this.app.settings.GLTFLoader&&(this.GLTFLoader=new this.app.settings.GLTFLoader(this.manager)),this.app.settings.OBJLoader&&(this.OBJLoader=new this.app.settings.OBJLoader(this.manager)),this.TextureLoader=new this.THREE.TextureLoader(this.manager)}load(){for(const t in this.app.settings.preload){let e=this.app.settings.preload[t];this.endsWith(e,this.settings.gltfExtensions)&&(this.GLTFLoader?this.GLTFLoader.load(e,(e=>{this.app[t]=e.scene})):console.warn(`ThreeasyLoader: GLTFLoader is not defined trying to load: ${e}`)),this.endsWith(e,this.settings.objExtensions)&&(this.OBJLoader?this.OBJLoader.load(e,(e=>{this.app[t]=e})):console.warn(`ThreeasyLoader: OBJLoader is not defined trying to load: ${e}`)),this.endsWith(e,this.settings.textureExtensions)&&this.TextureLoader.load(e,(e=>{this.app[t]=e,this.setUpTexture(this.app[t])}))}}endsWith(t,e){return e.some((e=>t.endsWith(e)))}setUpTexture(t){t.encoding=this.THREE.sRGBEncoding,t.wrapT=this.THREE.RepeatWrapping,t.wrapS=this.THREE.RepeatWrapping}}class i{constructor(t){this.app=t,this.tasks=[]}add(t){this.tasks.push(t)}load(){this.tasks.forEach((t=>t()))}}class n{constructor(e){this.app=e,this.clicks=[],this.hovers=[],this.app.settings.interactions&&(this.raycaster=new t.Raycaster,this.pointer=new t.Vector2,this.app.mouse=this.pointer,this.interactions())}noInteractions=()=>0==this.clicks.length&&0==this.hovers.length;interactions(){this.app.animator.add((()=>{this.noInteractions()||(this.raycaster.setFromCamera(this.pointer,this.app.camera),this.intersects=[],this.intersects=this.raycaster.intersectObjects(this.app.scene.children))})),this.app.renderer.domElement.addEventListener("mousemove",(t=>{this.noInteractions()||(this.calculatePosition(t),this.calculateIntersects("mouseMove",t))})),this.app.renderer.domElement.addEventListener("click",(t=>{this.noInteractions()||(this.calculatePosition(t),this.calculateIntersects("click",t))})),this.app.renderer.domElement.addEventListener("mouseup",(t=>{this.noInteractions()||(this.calculatePosition(t),this.calculateIntersects("mouseup",t))}))}calculatePosition(){this.pointer.x=event.clientX/window.innerWidth*2-1,this.pointer.y=-(event.clientY/window.innerHeight*2-1)}calculateIntersects(t,e){let s=[];for(let i=0;i<this.intersects.length;i++){const n=this.intersects[i];if(s.push(n.object.uuid),"click"==t){const t=this.clicks.find((t=>n.object.uuid==t.el.uuid));t&&t.fn(e,n)}}"mouseMove"==t&&this.hovers.forEach((t=>{const i=s.indexOf(t.el.uuid)>-1,n=t.el.hovered;i&&!n&&(t.el.hovered=!0,t.fns.enter&&t.fns.enter(e,t.el)),!i&&n&&(t.el.hovered=!1,t.fns.leave&&t.fns.leave(e,t.el))}))}onClick(t,e){this.clicks.push({el:t,fn:e})}onHover(t,e){t.hovered=!1,this.hovers.push({el:t,fns:e})}}class h{constructor(t,h){if(this.settings={light:!0,alpha:!1,interactions:!1,domElement:document.body,...h},!this.settings.domElement)throw new Error("Threeasy: settings.domElement not found.");this.THREE=t,this.setSize(),this.animator=new e(this),this.scene=new t.Scene,this.camera=new t.PerspectiveCamera(75,this.sizes.w/this.sizes.h,1,200),this.camera.position.x=0,this.camera.position.y=0,this.camera.position.z=2,this.scene.add(this.camera),this.renderer=new t.WebGLRenderer({antialias:!0,alpha:this.settings.alpha}),this.renderer.setSize(this.sizes.w,this.sizes.h),this.renderer.setPixelRatio(Math.min(2,window.devicePixelRatio)),this.renderer.shadowMap.enabled=!0,this.renderer.shadowMap.type=t.PCFSoftShadowMap,this.mouse={x:null,y:null},this.interactions=new n(this),this.models={},this.textures={},this.loader=new s(this),this.postLoader=new i(this),this.settings.light&&(this.light=new t.AmbientLight(16777215,1),this.scene.add(this.light)),this.clock=new t.Clock,this.clock.start(),this.settings.domElement.appendChild(this.renderer.domElement),this.renderer.domElement.style.maxWidth="100%",window.addEventListener("resize",(()=>this.resize())),this.resizeObserver=new ResizeObserver((t=>this.resize())),this.resizeObserver.observe(this.settings.domElement),this.preload()}setSize(){this.settings.domElement===document.body?this.sizes={w:window.innerWidth,h:window.innerHeight}:this.sizes={w:this.settings.domElement.clientWidth,h:this.settings.domElement.clientHeight},console.log(this.sizes)}preload(){this.settings.preload?this.loader.load():this.init()}postload(t){this.postLoader.add(t)}render(){this.renderer.render(this.scene,this.camera)}animate(t){this.animator.add(t)}init(){this.postLoader.load(),this.animator.animate()}resize(){this.setSize(),this.camera.aspect=this.sizes.w/this.sizes.h,this.camera.updateProjectionMatrix(),this.renderer.setSize(this.sizes.w,this.sizes.h),this.renderer.setPixelRatio(Math.min(2,window.devicePixelRatio))}}export{h as default};
